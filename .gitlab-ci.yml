stages:
- build
- create
- deploy

image: frime/quickhub-fablab-runtime

build_2logserver:
  stage: build
  script:
   - git submodule sync --recursive
   - git submodule update --init --recursive
   - mkdir -p result
   - cd result
   - qmake ../src/2log.io.pro DEFINES+=QH_BUILD=\\\\\\\"\"$CI_COMMIT_SHORT_SHA\\\\\\\"\" DEFINES+=QH_VERSION=\\\\\\\"\"$CI_COMMIT_TAG\\\\\\\"\"
   - make -j4
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - result/
  artifacts:
    paths:
      - result/bin

create_image:
  services:
    - docker:dind
  stage: create
  image: docker:18.09.7
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - if [ "$CI_COMMIT_REF_SLUG" == "master" ]; then IMAGE_TAG="latest"; else IMAGE_TAG="${CI_COMMIT_REF_SLUG}"; fi
    - echo ${IMAGE_TAG}
    - docker build -t $CI_REGISTRY_IMAGE:$IMAGE_TAG .
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG

deploy_image:
  services:
  - docker:dind
  stage: deploy
  when: manual
  dependencies:
    - create_image
  image: docker:18.09.7
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker tag $CI_REGISTRY_IMAGE:latest $CI_REGISTRY_IMAGE:release
    - docker push $CI_REGISTRY_IMAGE:release
